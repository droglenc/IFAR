{
  "hash": "807f1ab4cd04fa976f8bba1af73f13dc",
  "result": {
    "markdown": "---\ntitle: \"Backcalculation of Previous Lengths\"\nauthor: \"Derek H. Ogle\"\noutput: html_document\n---\n\n\n:::{.callout-note}\nThe `RFishBC` package has functions to acquire growth increment data from images of ageing structures and to ease back-calculation computations. Please see [the vignettes for `RFishBC`](https://fishr-core-team.github.io/RFishBC/) for a more thorough description of back-calculating previous lengths.\n:::\n\n&nbsp;\n\n@francis_back-calculation_1990 defined *back-calculation* as \"*... a technique that uses a set of measurements made on a fish at one time to infer its length at an earlier time or times. Specifically, the dimensions of one or more marks in some hard part of the fish, together with its current body length, are used to estimate its length at the time of formation of each of the marks. ... The marks are generally annual rings associated with growth checks, ... .*\" Thus, backcalculation is the reconstruction of the length of a fish at previous ages from measurements made on calcified structures.\n\n# Setup\n## Packages\nFunctions used in this supplement require the following packages.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(FSA)      # for peek(), headtail(), sumtable()\nlibrary(dplyr)    # for filter(), select(), mutate(), arrange(), group_by(), summarize()\n```\n:::\n\n\nAlso note that single functions from the `tidyr` and `stringr` packages are used with `::` so that the whole packages are not loaded here.\n\n## Data\nAll analyses in this supplement use the West Bearskin Lake (MN) Smallmouth Bass (*Micropterus dolomieu*) data from @weisberg_using_1993 found in [SMBassWB](https://fishr-core-team.github.io/FSA/reference/SMBassWB.html).^[Download data with CSV link on the linked page.] The analysis in this supplement will focus on those fish captured in 1990. Three variables that were constant and not used in this analysis and three measurement variables that corresponded to ages that did not exist after reducing to only fish captured in 1990 were removed to save space.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nSMBassWB <- read.csv(\"https://raw.githubusercontent.com/fishR-Core-Team/FSA/main/data-raw/SMBassWB.csv\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nwb90 <- SMBassWB |>\n  filter(yearcap==1990) |>\n  select(-(species:gear),-(anu10:anu12))\npeek(wb90,n=5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#R|      yearcap fish agecap lencap    anu1    anu2    anu3    anu4    anu5    anu6\n#R|  1      1990  482      1     75 1.51076      NA      NA      NA      NA      NA\n#R|  45     1990  431      3    130 1.01867 2.04110 3.22882      NA      NA      NA\n#R|  90     1990  453      3    165 1.63068 2.96180 3.96131      NA      NA      NA\n#R|  136    1990  382      7    225 1.33285 2.42372 3.04270 3.79372 4.86226 5.74919\n#R|  181    1990  389      9    329 1.05913 2.18769 3.55137 4.40766 5.78634 7.58178\n#R|         anu7    anu8     anu9   radcap\n#R|  1        NA      NA       NA  1.51076\n#R|  45       NA      NA       NA  3.22882\n#R|  90       NA      NA       NA  3.96131\n#R|  136 6.47536      NA       NA  6.47536\n#R|  181 8.32094 9.46362 10.43491 10.43491\n```\n:::\n:::\n\n\n&nbsp;\n\n# Terminology\nTwo types of measurements can be made on calcified structures. A *radial* measurement is the total distance from the center of the structure (e.g., focus of scale or nucleus of otolith) to the edge of an annulus. An *incremental* measurement is the distance between two successive annuli. Radial measurements are required for back-calculation of fish length.\n\nBack-calculation models estimate length at previous age $i$ (i.e., $L_{i}$) from known values of length at time of capture ($L_{C}$), scale radius to the $i$th annulus ($S_{i}$), and scale radius at time of capture ($S_{C}$). Several back-calculation models rely on the relationship between $S_{C}$ and $L_{C}$. Depending on the model, a function of mean $S_{C}$ for a given $L_{C}$ (i.e., $E(S_{C}|L_{C})$ ) or mean $L_{C}$ for a given $S_{C}$ (i.e., $E(L_{C}|S_{C})$) is used. These functions are not required to be linear, but often are, and in their linear form are represented as\n\n$$ E(S_{C}|L_{C})=a+bL_{C} $$ {#eq-ESL}\n\n$$ E(L_{C}|S_{C})=c+dS_{C} $$ {#eq-ELS}\n\nFitting these regressions is demonstrated [below](#scale-length-relationships).\n\n&nbsp;\n\n# Common Back-Calculation Models\nThe first back-calculation model was jointly developed by Knut Dahl and Einar Lea and appeared in @lea_methods_1910. The underlying concept of the *Dahl-Lea model* is that growth of the calcified structure is in exact proportion to growth in length of the fish. With this, the ratio of $S_{i}$ to $S_{C}$ is the same as the ratio of $L_{i}$ to $L_{C}$. Rearrangement of this equality yields the Dahl-Lea back-calculation model\n\n$$ L_{i}=\\frac{S_{i}}{S_{C}}L_{C} $$ {#eq-DahlLea}\n\nThe Dahl-Lea model describes a family of straight lines that pass through the **origin** and each observed ($S_{C},L_{C}$) point. Visually (@fig-BackCalcEx704), the estimated $L_{i}$ for a particular fish is found by locating $S_{i}$ along the x-axis, moving vertically until the straight line for that fish is met, and then moving horizontally to the point on the y-axis.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Plot of length-at-capture versus scale radius for West Bearskin Lake Smallmouth Bass in 1990. All four methods of backcalculation are shown for fish 704 ($S_{2}$=3.49804, $L_{C}$=218, and $S_{C}$=7.44389; black point and line) with calculational steps shown with the arrows. Fish 701 is shown as the gray point and line for comparative purposes.](backcalculation_files/figure-html/fig-BackCalcEx704-1.png){#fig-BackCalcEx704 fig-align='center' width=768}\n:::\n:::\n\n\n@fraser_growth_1916 was the first to describe, but @lee_review_1920 was the first to formally derive, the back-calculation model from the concept that \"the growth *increment* of the scale is, on the average ..., a constant proportion of the growth *increment* of the fish\" [@francis_back-calculation_1990]. In practice, the *Fraser-Lee model* modified the Dahl-Lea model by adjusting for the length of the fish when the calcified structure forms (i.e., $L=c$ when $S=0$), that is,\n\n$$ L_{i}=\\frac{S_{i}}{S_{C}}(L_{C}-c)+c $$ {#eq-FraserLee}\n\nwhere $c$ comes from the length of the fish at the time of scale formation, the intercept of the length-scale relationship regression (e.g., from @eq-ELS), or from published \"standards\" for a species [@carlander_standard_1982]. The Fraser-Lee model describes a family of lines with an intercept of $c$ that pass through the ($S_{C},L_{C}$) point (@francis_back-calculation_1990; @fig-BackCalcEx704).\n\nThe *scale proportional hypothesis* (SPH) model was named by @francis_back-calculation_1990, but was first recognized by @whitney_interpretation_1956 when they said \"*{i}f the scale was 10 per cent larger when the fish was caught than the average scale for that size of fish, [then] the scale would be 10 per cent larger than normal throughout the life.*\"  If \"average\" and \"normal\" are considered to be expected values, then this hypothesis can be written as\n\n$$ \\frac{S_{i}}{E[S|L_{i}]}=\\frac{S_{C}}{E[S|L_{C}]} $$\n\nIf it is assumed that the scale-length relationship is linear, then the two expected values in these ratios are computed by plugging $L_{i}$ and $L_{C}$, respectively, into the scale-length relationship (i.e., @eq-ESL) to produce\n\n$$ \\frac{S_{i}}{a+bL_{i}}=\\frac{S_{C}}{a+bL_{C}} $$\n\nwhich can be solved for $L_{i}$ to yield the general SPH back-calculation model\n\n$$ L_{i} = \\frac{S_{i}}{S_{C}}\\left(L_{C}+\\frac{a}{b}\\right) - \\frac{a}{b} $$ {#eq-SPH}\n\nThe linear SPH model produces a family of lines that all have an intercept of $-\\frac{a}{b}$ and pass through each observed ($S_{C},L_{C}$) point (@fig-BackCalcEx704). The SPH model is the same as the Fraser-Lee model except that the intercept from @eq-ELS is replaced with $-\\frac{a}{b}$. Further note that the SPH model is the same as the Dahl-Lea model if $a=0$.\n\nThe *body proportional hypothesis* (BPH) model was also named by @francis_back-calculation_1990 and was also first recognized by @whitney_interpretation_1956 when they said \"*{i}f a fish at time of capture were 10 per cent smaller than the average fish with that size of scale, [then] the fish would be 10 per cent smaller than the expected length for the size of that scale throughout life.*\" This hypothesis can be written as\n\n$$ \\frac{L_{i}}{E[L|S_{i}]}=\\frac{L_{C}}{E[L|S_{C}]} $$\n\nIf the length-scale relationship is linear then the expected values can be found by plugging $S_{i}$ and $S_{c}$ into @eq-ELS to get\n\n$$ \\frac{L_{i}}{c+dS_{i}}=\\frac{L_{C}}{c+dS_{C}} $$\n\nwhich can be solved for $L_{i}$ to yield the general BPH back-calculation model\n\n$$ L_{i}=L_{C}\\frac{c+dS_{i}}{c+dS_{c}} $$ {#eq-BPH}\n\nThe linear BPH model produces a family of lines that have an intercept of $\\frac{cL_{C}}{c+dS_{C}}$ and pass through each observed ($S_{C},L_{C}$) point (@fig-BackCalcEx704). In contrast to the other back-calculation models, the BPH model uses lines with a different intercept for each fish. The linear BPH model is the same as the Dahl-Lea model if $c=0$.\n\n@vigliola_back-calculation_2009 described 18 other models for the back-calculation of fish length.^[Functions for each of these models can be created with `bcFuns()` from `RFishBC`.]\n\n&nbsp;\n\n# Data Organization & Manipulation\nIn *wide* or *one-fish-per-line* format, all information about a single fish, including all of the measurements from the calcified structure, is in one row of the data frame. `wb90` contains radial measurements in the wide format.^[See the data frame snippet [above](#data).]\n\nFor back-calculation of fish length, these data must be radial, and not incremental, measurements. If `wb90` had contained incremental measurements, then it could be converted to radial measurements with `gConvert()` from `RFishBC`. The `gConvert()` function requires the data frame with the incremental measurements as the first argument, the prefix (in quotes) for the columns that contain the incremental measurements in `in.pre=`, and the type of measurement to **convert to** in `out.type=` (the options are `\"rad\"` (the default) or `\"inc\"`). For example, the code below would create a new data frame from `wb90` with radial measurements (**IF** `wb90` had incremental measurements).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# NOT RUN because wb90 is already radial measurements\nwb90A <- RFishBC::gConvert(wb90,in.pre=\"anu\",out.type=\"rad\")\n```\n:::\n\n\nFor efficient back-calculation, the data must also be converted to *long* or *one-measurement-per-line* format. Wide data may be converted to long data with `pivot_longer()` from `tidyr`.^[@ogleIntroductoryFisheriesAnalyses2016 used `gather()` from `tidyr` for this same purpose. The maintainers of `tidyr` suggest using `pivot_longer()` rather than `gather`.] For this use, the variables that contain the radial measurement data are given to `cols=`. The names for these variables will form a new column in the resulting data frame with the name given in `names_to=`. The values for these variables will be in a new column with the name given in `values_to=`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nwb90r <- wb90 |>\n  tidyr::pivot_longer(cols=anu1:anu9,names_to=\"agei\",values_to=\"radi\") |>\n  arrange(fish,agei)\nheadtail(wb90r)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#R|       yearcap fish agecap lencap  radcap agei    radi\n#R|  1       1990  374      7    243 7.57375 anu1 1.01672\n#R|  2       1990  374      7    243 7.57375 anu2 2.39296\n#R|  3       1990  374      7    243 7.57375 anu3 3.47635\n#R|  1627    1990  998      7    298 8.54805 anu7 8.54805\n#R|  1628    1990  998      7    298 8.54805 anu8      NA\n#R|  1629    1990  998      7    298 8.54805 anu9      NA\n```\n:::\n:::\n\n\nAs noted in @ogleIntroductoryFisheriesAnalyses2016, there are three potential problems with this result. First, the new `agei` variable contains the names of the variables from the original wide format data frame (e.g., `anu1`, `anu2`) rather than numbers that correspond to the age that the annulus was formed. Converting these labels to numbers begins by finding the portion of the string after the \"anu\" prefix with `str_sub()` with the vector of names as the first argument and `start=4` (because \"anu\" is three characters long). The result from `str_sub()`, however, is a character that must then be converted to a numeric with `as.numeric()`.\n\nThe second problem is that several of the radial measurements contain `NA` values. The non-`NA` values are found and retained by using `!is.na()` within `filter()`.\n\nThe third problem, while not an issue with these particular data, is that \"plus growth\" may have been recorded. \"Plus growth\" is growth on the margin of the calcified structure that does not represent a complete year of growth. If \"plus growth\" is present, then the new `agei` variable will have a value greater than the age-at-capture value. These instances should be removed from the new long format data frame.\n\nThe following code adjusts for these three issues.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nwb90r <- wb90r |> \n  mutate(agei=as.numeric(stringr::str_sub(agei,start=4))) |>\n  filter(!is.na(radi)) |>\n  filter(agei<=agecap)\npeek(wb90r,n=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#R|      yearcap fish agecap lencap  radcap agei    radi\n#R|  1      1990  374      7    243 7.57375    1 1.01672\n#R|  85     1990  388      9    300 9.38096    8 8.08080\n#R|  170    1990  408      3    136 3.12974    3 3.12974\n#R|  256    1990  436      3    154 4.27702    1 1.46016\n#R|  341    1990  460      2    115 2.66954    2 2.66954\n#R|  426    1990  698      7    264 7.76545    3 3.62943\n#R|  511    1990  714      7    290 9.31498    2 2.89488\n#R|  597    1990  730      2     98 2.24291    1 1.21677\n#R|  682    1990  747      7    265 7.84295    7 7.84295\n#R|  767    1990  998      7    298 8.54805    7 8.54805\n```\n:::\n:::\n\n\n&nbsp;\n\n# Computing Back-Calculated Lengths\n## Scale-Length Relationships\nThe scale-length (@eq-ESL) and length-scale (@eq-ELS) relationships required for all but the Dahl-Lea method are computed with the wide format data. Thus, the wide format data frame must contain the length of the fish (e.g., `lencap`) and the total radius of the calcified structure (e.g., `radcap`) at the time of capture. Both linear relationships are fit with `lm()` and the coefficients should be extracted with `coef()` and saved into objects.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm.sl <- lm(radcap~lencap,data=wb90)\n( a <- coef(lm.sl)[[1]] )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#R|  [1] -1.304391\n```\n:::\n\n```{.r .cell-code}\n( b <- coef(lm.sl)[[2]] )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#R|  [1] 0.03537477\n```\n:::\n\n```{.r .cell-code}\nlm.ls <- lm(lencap~radcap,data=wb90)\n( c <- coef(lm.ls)[[1]] )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#R|  [1] 41.65166\n```\n:::\n\n```{.r .cell-code}\n( d <- coef(lm.ls)[[2]] )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#R|  [1] 27.35597\n```\n:::\n:::\n\n\n## Applying the Back-Calculation Models\n\nThe $L_{i}$ estimated with a back-calculation model are most easily added to the long format data frame with `mutate()`. For example, the $L_{i}$ computed with all four back-calculation models are added to `wb90r` below.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nwb90r <- wb90r |>\n  mutate(DL.len=(radi/radcap)*lencap,\n         FL.len=(radi/radcap)*(lencap-c)+c,\n         SPH.len=(-a/b)+(lencap+a/b)*(radi/radcap),\n         BPH.len=lencap*(c+d*radi)/(c+d*radcap))\nheadtail(wb90r,n=5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#R|      yearcap fish agecap lencap  radcap agei    radi    DL.len    FL.len\n#R|  1      1990  374      7    243 7.57375    1 1.01672  32.62096  68.68119\n#R|  2      1990  374      7    243 7.57375    2 2.39296  76.77693 105.26856\n#R|  3      1990  374      7    243 7.57375    3 3.47635 111.53696 134.07052\n#R|  4      1990  374      7    243 7.57375    4 4.37718 140.43964 158.01910\n#R|  5      1990  374      7    243 7.57375    5 5.18976 166.51087 179.62156\n#R|  763    1990  998      7    298 8.54805    3 3.60701 125.74669 149.82265\n#R|  764    1990  998      7    298 8.54805    4 4.48222 156.25804 176.06941\n#R|  765    1990  998      7    298 8.54805    5 5.17646 180.46047 196.88905\n#R|  766    1990  998      7    298 8.54805    6 6.62240 230.86847 240.25149\n#R|  767    1990  998      7    298 8.54805    7 8.54805 298.00000 298.00000\n#R|        SPH.len   BPH.len\n#R|  1    64.54444  67.83504\n#R|  2   102.00007 104.60001\n#R|  3   131.48552 133.54177\n#R|  4   156.00243 157.60660\n#R|  5   178.11753 179.31392\n#R|  763 147.06071 151.78969\n#R|  764 173.79670 177.68803\n#R|  765 195.00440 198.23129\n#R|  766 239.17509 241.01809\n#R|  767 298.00000 298.00000\n```\n:::\n:::\n\n\nFor example, the mean length-at-age may be computed from the back-calculated lengths (shown below for the Fraser-Lee results).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nwb90r |>\n  group_by(agei) |>\n  summarize(n=validn(FL.len),mn=mean(FL.len),sd=sd(FL.len)) |>\n  as.data.frame()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#R|    agei   n       mn        sd\n#R|  1    1 181  78.5663  6.472692\n#R|  2    2 178 114.1527 10.453632\n#R|  3    3 155 146.7669 13.898434\n#R|  4    4  71 172.6512 15.339848\n#R|  5    5  64 201.0405 17.479717\n#R|  6    6  64 235.3834 23.350527\n#R|  7    7  50 268.5969 25.286958\n#R|  8    8   2 283.2237 26.912010\n#R|  9    9   2 314.5000 20.506097\n```\n:::\n:::\n\n\nAdditionally, the mean length at each back-calculated age computed separately for each age-at-capture may be computed with `sumTable()` from `FSA`, where the left side of the formula is the quantitative variable to be summarized and the right side has grouping variables presented in `row*column` format.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsumTable(FL.len~agecap*agei,data=wb90r,digits=1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#R|       1     2     3     4     5     6     7     8     9\n#R|  1 73.7    NA    NA    NA    NA    NA    NA    NA    NA\n#R|  2 79.7 113.3    NA    NA    NA    NA    NA    NA    NA\n#R|  3 77.3 112.8 148.9    NA    NA    NA    NA    NA    NA\n#R|  4 71.3 121.8 160.9 194.0    NA    NA    NA    NA    NA\n#R|  6 79.8 107.9 136.0 169.6 198.8 229.7    NA    NA    NA\n#R|  7 81.6 118.2 144.7 170.7 201.8 237.0 269.1    NA    NA\n#R|  9 71.2  99.8 135.0 166.1 197.5 236.0 256.4 283.2 314.5\n```\n:::\n:::\n",
    "supporting": [
      "backcalculation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}