[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IFAR",
    "section": "",
    "text": "Introductory Fisheries Analyses with R by Derek H. Ogle provides detailed instructions on how to perform basic fisheries stock assessment analyses in the R environment. The analyses covered are typical analyses for many working fisheries scientists and, thus, also occur in most upper-level undergraduate and graduate level fisheries science, analysis, or management courses. The book begins with three foundational chapters that help the reader become familiar with R within the context of basic fisheries analyses and examples. The remaining chapters build upon these foundational skills with analytical techniques specific to fisheries stock assessments. A preview is available from Google Books.\nThe book is dedicated to my three professional mentors."
  },
  {
    "objectID": "index.html#brief-description",
    "href": "index.html#brief-description",
    "title": "IFAR",
    "section": "Brief Description",
    "text": "Brief Description\nIntroductory Fisheries Analyses with R by Derek H. Ogle provides detailed instructions on how to perform basic fisheries stock assessment analyses in the R environment. The analyses covered are typical analyses for many working fisheries scientists and, thus, also occur in most upper-level undergraduate and graduate level fisheries science, analysis, or management courses. The book begins with three foundational chapters (R basics, data manipulation, and plotting) that help the reader become familiar with R within the context of basic fisheries analyses and examples. The remaining chapters build upon these foundational skills with analytical techniques specific to fisheries stock assessments. A preview is available from Google Books.\nThe book is dedicated to my three professional mentors."
  },
  {
    "objectID": "index.html#table-of-contents",
    "href": "index.html#table-of-contents",
    "title": "IFAR",
    "section": "Table of Contents",
    "text": "Table of Contents\n\n(Very Brief) Introduction to R Basics\n\nThe bare fundamentals of R that are required for the remainder of the book.\nR Script\n\nLoading Data and Basic Manipulations\n\nLoad data into R from external files and perform typical manipulations including filtering, sorting, aggregating, joining, and converting between wide- and long-formats.\nR Script and Data: BGHRfish.csv, BGHRsample.csv, inchAge.csv, inchBio.csv, inchBio07.csv, inchBio08.csv, inchGear.csv\nSupplements: Backcalculation of Previous Length\nExercises\n\nPlotting Fundamentals\n\nThe bare fundamentals for constructing basic plots using base R.\nR Script || Data:\nSupplements || Exercises\n\nAge Comparisons\n\nCompare two or more estimates of age for the same fish with precision and bias metrics and plots.\nR Script || Data:\nSupplements || Exercises\n\nAge-Length Keys\n\nAssign ages to unaged fish from their length and an age-length-key.\nR Script || Data:\nSupplements || Exercises\n\nSize Structure\n\nAssess size structure through length frequencies and the proportional size distribution (PSD) metric.\nR Script || Data:\nSupplements || Exercises\n\nWeight-Length Relationships\n\nIntroduction to simple linear regression through examination of weight-length relationships.\nR Script || Data:\nSupplements || Exercises\n\nCondition\n\nCompute condition metrics from observed length and weights. Introduction to one-way ANOVA.\nR Script || Data:\nSupplements || Exercises\n\nAbundance from Capture-Recapture Data\n\nEstimate abundance from capture-recapture data for closed (single and multiple recapture events) and open populations.\nR Script || Data:\nSupplements || Exercises\n\nAbundance from Depletion Data\n\nEstimate abundance from removal or depletion samplings (Leslie, DeLury, k-pass).\nR Script || Data:\nSupplements || Exercises\n\nMortality Rates\n\nEstimate total mortality rates from catch curve and capture-recapture data. Estimate fishing and natural mortality with empirical models.\nR Script || Data:\nSupplements || Exercises\n\nIndividual Growth\n\nEstimate parameters for the von Bertalanffy growth function and compare growth parameters among populations.\nR Script || Data:\nSupplements || Exercises\n\nRecruitment\n\nEstimate parameters for the Beverton-Holt and Ricker stock-recruitment models, compute spawning potential ratios, and estimate year-class strengths from catch data.\nR Script || Data:\nSupplements || Exercises"
  },
  {
    "objectID": "index.html#errata",
    "href": "index.html#errata",
    "title": "IFAR",
    "section": "Errata",
    "text": "Errata\nAn errata and post-production notes are maintained here."
  },
  {
    "objectID": "dedication.html",
    "href": "dedication.html",
    "title": "Dedication",
    "section": "",
    "text": "I have been fortunate enough to have had three significant mentors during my career.\n\nNicholas Bystrom was my basketball coach and statistics and mathematics professor at Northland College. “Coach” helped me understand, very early in my career, the power, utility, and beauty of mathematics and statistics.\nJames Selgeby was my boss for a work-study position with the U.S. Fish and Wildlife Service during my last two years at Northland College. Jim trusted me as a fisheries scientist, fostered my passion for Great Lakes fisheries, and encouraged me to pursue an advanced degree in fisheries.\nGeorge Spangler was my doctoral advisor at the University of Minnesota. George strongly encouraged advanced studies in statistics, supported my interest in programming, and provided an environment, as a graduate student and later while on sabbatical, where I could creatively mix statistics, programming, and fisheries.\n\nThis book would not exist without each of these great men. I dedicate this work to them.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNick at the board, Northland College ca. 1995.\n\n\n\n\n\n\n\nDerek and Jim following Jim’s honorary degree reception at Northland College, 2007.\n\n\n\n\n\n\n\nDerek and George, December, 2015.\n\n\n\n\n\n\n\nNick coaching basketball, Northland College ca. 1987.\n\n\n\n\n\n\n\nJim at his desk, ca. 1990.\n\n\n\n\n\n\n\nGeorge, Don Pereira, Shannon Davis-Foust, and Derek at the national AFS meeting in Minneapolis, 2012.\n\n\n\n\n\n\n\nNick and I (#15) with the Rest of the Team, 1986.\n\n\n\n\n\n\n\nGeorge sailing on Lake Pepin, ca. 2008.\n\n\n\n\n\n\n\nNick and I in deep discussion, ca. 1998.\n\n\n\n\n\n Previous\n\n\n Next"
  },
  {
    "objectID": "errata.html",
    "href": "errata.html",
    "title": "Errata & Notes",
    "section": "",
    "text": "Page 86, Footnote 7 – “Ager C” should be “Ager B”.\nPage 207, Equation for \\(\\hat{Z}\\) – \\(N\\) should be \\(n\\) in the denominator. Thus, the new equation should be\n\n\\[\\hat{Z} = -log(\\hat{S}) - \\frac{(n-1)(n-2)}{n(T+1)(n+T-1)} \\]"
  },
  {
    "objectID": "errata.html#post-production-changes",
    "href": "errata.html#post-production-changes",
    "title": "Errata & Notes",
    "section": "Post-Production Changes",
    "text": "Post-Production Changes\n\nThroughout – I have removed filterD() from FSA. Please see this fishR post for how to accomplish the same effect using functions from dplyr.\nSection 2.4 – The maintainers of tidyr suggest using pivot_longer() instead of gather() and pivot_wider() instead of spread(), though gather() and spread() still work as shown in the book.\nSection 4.2 – I have dramatically changed the age-bias plot that is produced by plot() with an object saved from ageBias(). This change is described in the documentation and examples for ageBias(). The plots shown in the book can largely still be produced with plotAB() (see its documentation here). Also see this fishR post for a description of constructing an age-bias plot using ggplot2.\nSection 4.4 – I have changed the information that is returned from agePrecision(). All of the information shown in the book is still provided; however, other information (e.g., average standard deviation and mean absolute deviation) are now also returned. The output is documented in the documentation for agePrecision().\nSections 7.3.3, 8.3.2.1, 12.3.6, and 13.2.2 – residPlot() has been removed from the FSA package. Other methods for constructing residuals plots are discussed in this fishR post.\nSections 12.3.1 and 13.1 – The dynamic plots described for finding starting values for a von Bertalanffy growth function and the stock-recruitment functions (i.e., nonlinear regressions) have been removed from vbStarts() and srStarts(), because of the difficulty of maintaining a package that requires the tcltk package. These functionalities are now in the FSAsims package, but it can also largely be replicated with the fixed= arguments to vbStarts() and srStarts(). Use of fixed= in srStarts() is demonstrated in this blog post."
  },
  {
    "objectID": "index.html#table-of-contents-with-resources",
    "href": "index.html#table-of-contents-with-resources",
    "title": "IFAR",
    "section": "Table of Contents (with Resources)",
    "text": "Table of Contents (with Resources)\n\n(Very Brief) Introduction to R Basics\n\nThe bare fundamentals of R that are required for the remainder of the book.\nR Script\n\nLoading Data and Basic Manipulations\n\nLoad data into R from external files and perform typical manipulations including filtering, sorting, aggregating, joining, and converting between wide- and long-formats.\nR Script and Data: BGHRfish.csv, BGHRsample.csv, inchAge.csv, inchBio.csv, inchBio07.csv, inchBio08.csv, inchGear.csv\nSupplements: Backcalculation of Previous Length\nExercises\n\nPlotting Fundamentals\n\nThe bare fundamentals for constructing basic plots using base R.\nR Script and Data:\nSupplements: Common Axis Labels on a Grid of Subplots, Complex Grid Layouts\nExercises\n\nAge Comparisons\n\nCompare two or more estimates of age for the same fish with precision and bias metrics and plots.\nR Script and Data: ShadCR.csv\nExercises\n\nAge-Length Keys\n\nAssign ages to unaged fish from their length and an age-length-key.\nR Script and Data: CreekChub.csv, SiscowetMI2004.csv\nExercises\n\nSize Structure\n\nAssess size structure through length frequencies and the proportional size distribution (PSD) metric.\nR Script and Data: InchLake1113.csv\nExercises\n\nWeight-Length Relationships\n\nIntroduction to simple linear regression through examination of weight-length relationships.\nR Script and Data: RuffeSLRH.csv\nSupplements: DVR with More than Two Groups\nExercises\n\nCondition\n\nCompute condition metrics from observed length and weights. Introduction to one-way ANOVA.\nR Script and Data: RuffeSLRH.csv\nExercises\n\nAbundance from Capture-Recapture Data\n\nEstimate abundance from capture-recapture data for closed (single and multiple recapture events) and open populations.\nR Script and Data: CutthroatAL.csv, Zehfussetal_1985_mod.INP\nExercises\n\nAbundance from Depletion Data\n\nEstimate abundance from removal or depletion samplings (Leslie, DeLury, k-pass).\nR Script\nExercises\n\nMortality Rates\n\nEstimate total mortality rates from catch curve and capture-recapture data. Estimate fishing and natural mortality with empirical models.\nR Script and Data: CCatfishNB.csv, CutthroatAL.csv\nExercises\n\nIndividual Growth\n\nEstimate parameters for the von Bertalanffy growth function and compare growth parameters among populations.\nR Script and Data: BlackDrum2001.csv\nSupplements: Fitting Other VBGF Parameterizations, Fitting Other Growth Functions, Additional Nonlinear Regression Algorithms\nExercises\n\nRecruitment\n\nEstimate parameters for the Beverton-Holt and Ricker stock-recruitment models, compute spawning potential ratios, and estimate year-class strengths from catch data.\nR Script and Data: PSalmonAK.csv, SturgeonGB.csv, WalleyeWad.csv, WalleyeWyrlng.csv\nSupplements: Maturity Schedules\nExercises"
  },
  {
    "objectID": "supplements/backcalculation.html",
    "href": "supplements/backcalculation.html",
    "title": "Backcalculation of Previous Lengths",
    "section": "",
    "text": "Note\n\n\n\nThe RFishBC package has functions to acquire growth increment data from images of ageing structures and to ease back-calculation computations. Please see the vignettes for RFishBC for a more thorough description of back-calculating previous lengths.\nFrancis (1990) defined back-calculation as “… a technique that uses a set of measurements made on a fish at one time to infer its length at an earlier time or times. Specifically, the dimensions of one or more marks in some hard part of the fish, together with its current body length, are used to estimate its length at the time of formation of each of the marks. … The marks are generally annual rings associated with growth checks, … .” Thus, backcalculation is the reconstruction of the length of a fish at previous ages from measurements made on calcified structures."
  },
  {
    "objectID": "supplements/backcalculation.html#packages",
    "href": "supplements/backcalculation.html#packages",
    "title": "Backcalculation of Previous Lengths",
    "section": "Packages",
    "text": "Packages\nFunctions used in this supplement require the following packages.\n\nlibrary(FSA)      # for peek(), headtail(), sumtable()\nlibrary(dplyr)    # for filter(), select(), mutate(), arrange(), group_by(), summarize()\n\nAlso note that single functions from the tidyr and stringr packages are used with :: so that the whole packages are not loaded here."
  },
  {
    "objectID": "supplements/backcalculation.html#data",
    "href": "supplements/backcalculation.html#data",
    "title": "Backcalculation of Previous Lengths",
    "section": "Data",
    "text": "Data\nAll analyses in this supplement use the West Bearskin Lake (MN) Smallmouth Bass (Micropterus dolomieu) data from Weisberg (1993) found in SMBassWB.1 The analysis in this supplement will focus on those fish captured in 1990. Three variables that were constant and not used in this analysis and three measurement variables that corresponded to ages that did not exist after reducing to only fish captured in 1990 were removed to save space.1 Download data with CSV link on the linked page.\n\nSMBassWB <- read.csv(\"https://raw.githubusercontent.com/fishR-Core-Team/FSA/main/data-raw/SMBassWB.csv\")\n\n\n\n\n\nwb90 <- SMBassWB |>\n  filter(yearcap==1990) |>\n  select(-(species:gear),-(anu10:anu12))\npeek(wb90,n=5)\n\n#R|      yearcap fish agecap lencap    anu1    anu2    anu3    anu4    anu5    anu6\n#R|  1      1990  482      1     75 1.51076      NA      NA      NA      NA      NA\n#R|  45     1990  431      3    130 1.01867 2.04110 3.22882      NA      NA      NA\n#R|  90     1990  453      3    165 1.63068 2.96180 3.96131      NA      NA      NA\n#R|  136    1990  382      7    225 1.33285 2.42372 3.04270 3.79372 4.86226 5.74919\n#R|  181    1990  389      9    329 1.05913 2.18769 3.55137 4.40766 5.78634 7.58178\n#R|         anu7    anu8     anu9   radcap\n#R|  1        NA      NA       NA  1.51076\n#R|  45       NA      NA       NA  3.22882\n#R|  90       NA      NA       NA  3.96131\n#R|  136 6.47536      NA       NA  6.47536\n#R|  181 8.32094 9.46362 10.43491 10.43491"
  },
  {
    "objectID": "supplements/backcalculation.html#scale-length-relationships",
    "href": "supplements/backcalculation.html#scale-length-relationships",
    "title": "Backcalculation of Previous Lengths",
    "section": "Scale-Length Relationships",
    "text": "Scale-Length Relationships\nThe scale-length (Equation 1) and length-scale (Equation 2) relationships required for all but the Dahl-Lea method are computed with the wide format data. Thus, the wide format data frame must contain the length of the fish (e.g., lencap) and the total radius of the calcified structure (e.g., radcap) at the time of capture. Both linear relationships are fit with lm() and the coefficients should be extracted with coef() and saved into objects.\n\nlm.sl <- lm(radcap~lencap,data=wb90)\n( a <- coef(lm.sl)[[1]] )\n\n#R|  [1] -1.304391\n\n( b <- coef(lm.sl)[[2]] )\n\n#R|  [1] 0.03537477\n\nlm.ls <- lm(lencap~radcap,data=wb90)\n( c <- coef(lm.ls)[[1]] )\n\n#R|  [1] 41.65166\n\n( d <- coef(lm.ls)[[2]] )\n\n#R|  [1] 27.35597"
  },
  {
    "objectID": "supplements/backcalculation.html#applying-the-back-calculation-models",
    "href": "supplements/backcalculation.html#applying-the-back-calculation-models",
    "title": "Backcalculation of Previous Lengths",
    "section": "Applying the Back-Calculation Models",
    "text": "Applying the Back-Calculation Models\nThe \\(L_{i}\\) estimated with a back-calculation model are most easily added to the long format data frame with mutate(). For example, the \\(L_{i}\\) computed with all four back-calculation models are added to wb90r below.\n\nwb90r <- wb90r |>\n  mutate(DL.len=(radi/radcap)*lencap,\n         FL.len=(radi/radcap)*(lencap-c)+c,\n         SPH.len=(-a/b)+(lencap+a/b)*(radi/radcap),\n         BPH.len=lencap*(c+d*radi)/(c+d*radcap))\nheadtail(wb90r,n=5)\n\n#R|      yearcap fish agecap lencap  radcap agei    radi    DL.len    FL.len\n#R|  1      1990  374      7    243 7.57375    1 1.01672  32.62096  68.68119\n#R|  2      1990  374      7    243 7.57375    2 2.39296  76.77693 105.26856\n#R|  3      1990  374      7    243 7.57375    3 3.47635 111.53696 134.07052\n#R|  4      1990  374      7    243 7.57375    4 4.37718 140.43964 158.01910\n#R|  5      1990  374      7    243 7.57375    5 5.18976 166.51087 179.62156\n#R|  763    1990  998      7    298 8.54805    3 3.60701 125.74669 149.82265\n#R|  764    1990  998      7    298 8.54805    4 4.48222 156.25804 176.06941\n#R|  765    1990  998      7    298 8.54805    5 5.17646 180.46047 196.88905\n#R|  766    1990  998      7    298 8.54805    6 6.62240 230.86847 240.25149\n#R|  767    1990  998      7    298 8.54805    7 8.54805 298.00000 298.00000\n#R|        SPH.len   BPH.len\n#R|  1    64.54444  67.83504\n#R|  2   102.00007 104.60001\n#R|  3   131.48552 133.54177\n#R|  4   156.00243 157.60660\n#R|  5   178.11753 179.31392\n#R|  763 147.06071 151.78969\n#R|  764 173.79670 177.68803\n#R|  765 195.00440 198.23129\n#R|  766 239.17509 241.01809\n#R|  767 298.00000 298.00000\n\n\nFor example, the mean length-at-age may be computed from the back-calculated lengths (shown below for the Fraser-Lee results).\n\nwb90r |>\n  group_by(agei) |>\n  summarize(n=validn(FL.len),mn=mean(FL.len),sd=sd(FL.len)) |>\n  as.data.frame()\n\n#R|    agei   n       mn        sd\n#R|  1    1 181  78.5663  6.472692\n#R|  2    2 178 114.1527 10.453632\n#R|  3    3 155 146.7669 13.898434\n#R|  4    4  71 172.6512 15.339848\n#R|  5    5  64 201.0405 17.479717\n#R|  6    6  64 235.3834 23.350527\n#R|  7    7  50 268.5969 25.286958\n#R|  8    8   2 283.2237 26.912010\n#R|  9    9   2 314.5000 20.506097\n\n\nAdditionally, the mean length at each back-calculated age computed separately for each age-at-capture may be computed with sumTable() from FSA, where the left side of the formula is the quantitative variable to be summarized and the right side has grouping variables presented in row*column format.\n\nsumTable(FL.len~agecap*agei,data=wb90r,digits=1)\n\n#R|       1     2     3     4     5     6     7     8     9\n#R|  1 73.7    NA    NA    NA    NA    NA    NA    NA    NA\n#R|  2 79.7 113.3    NA    NA    NA    NA    NA    NA    NA\n#R|  3 77.3 112.8 148.9    NA    NA    NA    NA    NA    NA\n#R|  4 71.3 121.8 160.9 194.0    NA    NA    NA    NA    NA\n#R|  6 79.8 107.9 136.0 169.6 198.8 229.7    NA    NA    NA\n#R|  7 81.6 118.2 144.7 170.7 201.8 237.0 269.1    NA    NA\n#R|  9 71.2  99.8 135.0 166.1 197.5 236.0 256.4 283.2 314.5"
  },
  {
    "objectID": "supplements/commonAxisLabels.html",
    "href": "supplements/commonAxisLabels.html",
    "title": "Common Axis Labels on a Grid of Subplots",
    "section": "",
    "text": "Several methods for modifying base graphics were shown in Ogle (2016), including simple layouts (side-by-side, one-over-the-other) of multiple plots. Creating common x- and y-axis labels for a grid of plots is described in this supplement. More complex layouts (e.g., plot in first row spans two columns or unequal sized plots) are described in this supplement.\nA single function is used from dplyr in this supplement; thus, :: is used instead of loading the entire package.\nThe BullTroutRML2 data from FSAdata used in Ogle (2016) are also used here.\n\ndata(BullTroutRML2,package=\"FSAdata\")\n\n\nCommon Axis Labels on a Grid of Subplots\nA common need is to plot multiple graphics in a grid-like format with one axis label that serves as the label for each graph. This can be accomplished with arguments to par(), but the regions of a plot must be understood first.\nEach plot consists of three regions – the plot area, the figure area, and the outer margin area (Figure 1). The plot area is where the points or bars will be graphed. The area between the plot area and the figure area is where the axis ticks, labels, and title will appear. The area outside of the figure area is the outer margin area and is generally used to provide extra space around the graphic or to place text.\n\n\n\n\n\nFigure 1: Schematic plot that illustrates the plotting area (inside the blue box), the figure area (inside the red box), and the outer margin area (between the dark gray and red boxes).\n\n\n\n\nIn most instances (and the default), the width of the outer margin area is 0 on all sides of the figure area such that no outer margin area exists. The size of the outer margin area is set with oma= in par(), which takes a vector of four values to serve as widths of the four sides of the outer margin area, beginning with the bottom and moving counter-clockwise. The default is par(oma=c(0,0,0,0)). For example, margins that are two “lines” wide on the top and bottom and one “line” wide on the left and right may be set with par(oma=c(2,1,2,1)).\nCommon axis labels for multiple graphs can be placed in the outer margin area. In the example below, a 2-by-2 grid is created with mfrow() (as described in Ogle (2016)) and the bottom and left outer margin areas are increased to be two “lines” wide to allow for common x- and y-axis labels.\n\npar(mfrow=c(2,2),oma=c(2,2,0,0))\n\nThe four subplot areas are then populated with scatterplots (note that the x- and y-axis labels are set to empty strings to suppress labeling the axes)\n\nxlmts <- c(-0.5,14.5)\nylmts <- c(0,700)\nBTH1 <- BullTroutRML2 |> dplyr::filter(lake==\"Harrison\",era==\"1977-80\")\nplot(fl~age,data=BTH1,main=\"Harrison, 1977-80\",\n     xlab=\"\",ylab=\"\",pch=19,xlim=xlmts,ylim=ylmts)\nBTO1 <- BullTroutRML2 |> dplyr::filter(lake==\"Osprey\",era==\"1977-80\")\nplot(fl~age,data=BTO1,main=\"Osprey, 1977-80\",\n     xlab=\"\",ylab=\"\",pch=19,xlim=xlmts,ylim=ylmts)\nBTH2 <- BullTroutRML2 |> dplyr::filter(lake==\"Harrison\",era==\"1997-01\")\nplot(fl~age,data=BTH2,main=\"Harrison, 1997-01\",\n     xlab=\"\",ylab=\"\",pch=19,xlim=xlmts,ylim=ylmts)\nBTO2 <- BullTroutRML2 |> dplyr::filter(lake==\"Osprey\",era==\"1997-01\")\nplot(fl~age,data=BTO2,main=\"Osprey, 1997-01\",\n     xlab=\"\",ylab=\"\",pch=19,xlim=xlmts,ylim=ylmts)\n\nThe common x- and y-axis labels are then placed in the outer margin areas with mtext(). In this capacity, mtext() requires the text to be written as the first argument, a number in side= that indicates the margin on which to print the text,1 a number in line= that indicates the line on which to print the text (defaults to 0), and outer=TRUE to force the text into the outer margin area. Further note that las=0 is used for the y-axis label to force the text to be parallel to the y-axis. This is only needed because las=1 was set globally for producing this supplement.1 The side= argument in mtext() uses the same numbering scheme as other functions – 1=bottom, 2=left, 3=top, 4=right.\n\nmtext(\"Age (years)\",side=1,line=0,outer=TRUE,cex=1.3)\nmtext(\"Fork Length (mm)\",side=2,line=0,outer=TRUE,cex=1.3,las=0)\n\nThe combined code above creates the plot shown in Figure 2.\n\n\n\n\n\nFigure 2: Grid of plots that uses the outer margin area to provide common axis labels.\n\n\n\n\n\n\n\n\n\n\nReferences\n\nOgle, D. H. 2016. Introductory Fisheries Analyses with R. CRC Press, Boca Raton, FL."
  },
  {
    "objectID": "supplements/commonAxisLabels.html#packages",
    "href": "supplements/commonAxisLabels.html#packages",
    "title": "Common Axis Labels on a Grid of Subplots",
    "section": "Packages",
    "text": "Packages\nA single function is used from dplyr in this supplement; thus, :: is used instead of loading the entire package."
  },
  {
    "objectID": "supplements/commonAxisLabels.html#data",
    "href": "supplements/commonAxisLabels.html#data",
    "title": "Common Axis Labels on a Grid of Subplots",
    "section": "Data",
    "text": "Data\nThe BullTroutRML2 data from FSAdata used in Ogle (2016) are also used here.\n\ndata(BullTroutRML2,package=\"FSAdata\")"
  },
  {
    "objectID": "supplements/complexGridLayouts.html",
    "href": "supplements/complexGridLayouts.html",
    "title": "Complex Grid Layouts",
    "section": "",
    "text": "Several methods for modifying base graphics were shown in Ogle (2016), including simple layouts (side-by-side, one-over-the-other) of multiple plots. More complex layouts (e.g., plot in first row spans two columns or unequal sized plots) are described in this supplement. Creating common x- and y-axis labels for a grid of plots is described in this supplement.\nA single function is used from dplyr in this supplement; thus, :: is used instead of loading the entire package. The FSA package is loaded here to provide access to the modified hist().\n\nlibrary(FSA)\n\nThe BullTroutRML2 and BloaterLH data from FSAdata used in Ogle (2016) are also used here.\n\ndata(BullTroutRML2,package=\"FSAdata\")\ndata(BloaterLH,package=\"FSAdata\")\n\n\nComplex Grid Layouts with layout()\nThe layout() function allows for more complicated organizations of plots. The only required argument to layout() is a matrix that specifies the positions, as a grid, for a series of plots. The numbers in the matrix describe which sequential plot will appear in that position. For example, the following code constructs a 2x2 grid for four plots where the first plot will appear in the lower-right corner and the last (fourth) plot will appear in the upper-left corner.\n\n( m <- matrix(4:1,nrow=2,byrow=TRUE) )\n\n#R|       [,1] [,2]\n#R|  [1,]    4    3\n#R|  [2,]    2    1\n\nlayout(m)\n\nThe layout.show() function is used to show the layout grid. Its only argument is the number of positions to show. The example below illustrates the layout created above.\n\nlayout.show(4)\n\n\n\n\nFigure 1: Illustration of 2x2 layout grid for graphics.\n\n\n\n\nThe 2x2 grid in Figure 1 is not that interesting because that layout is just as easily constructed with mfrow= in par() (as shown in the IFAR book). Layouts, however, can also be constructed that are not “grids.” For example, the entire first row may be one plot with a second row of two plots. This layout grid is constructed by including a “1” in the first two positions of the layout matrix (Figure 2).\n\n( m <- matrix(c(1,1,2,3),nrow=2,byrow=TRUE) )\n\n#R|       [,1] [,2]\n#R|  [1,]    1    1\n#R|  [2,]    2    3\n\nlayout(m)\n\n\nlayout.show(3)\n\n\n\n\nFigure 2: Illustration of layout grid for graphics with one plot in the first row and two in the second row.\n\n\n\n\nThe following code fills this layout grid to produce Figure 3.\n\npar(mar=c(3.05,3.05,0.65,0.65),mgp=c(1.9,0.3,0),tcl=-0.2,las=1,\n    cex.lab=0.95,cex.axis=0.9)\nplot(age3~eggs,data=BloaterLH,pch=19,xlab=\"Millions of Eggs\",\n     ylab=\"Relative Abundance of Age-3 Fish\")\nhist(~eggs,data=BloaterLH,xlab=\"Millions of Eggs\")\nhist(~age3,data=BloaterLH,xlab=\"Age-3 Relative Abundance\")\n\n\n\n\nFigure 3: Illustration of a plot with one subplot in the first row and two in the second row.\n\n\n\n\n \nThe size of the plots in the layout may be controlled with height= and width=. These arguments accept vectors that represent the relative heights and widths of the rows and columns in the layout grid, respectively. For example, height=c(3,1) sets the height of the first row to be three times larger than the height of the second row. Including the respect=TRUE argument will assure that “unit distances” in the horizontal and vertical directions are treated the same. An example layout with different cell sizes is constructed below and shown in Figure 4. Also note in this example, that a zero in a cell means that that cell will not receive a plot.\n\n( m <- matrix(c(2,0,1,3),nrow=2,byrow=TRUE) )\n\n#R|       [,1] [,2]\n#R|  [1,]    2    0\n#R|  [2,]    1    3\n\nlayout(m,height=c(1,4),width=c(4,1),respect=TRUE)\n\n\nlayout.show(3)\n\n\n\n\nFigure 4: Illustration of layout grid for plots with differing row heights and column widths.\n\n\n\n\nFigure 5 is an example that fills the layout shown in Figure 4.\n\npar(mar=c(4,4,0,0))\nplot(age3~eggs,data=BloaterLH,xlim=c(0,2.4),ylim=c(0,240),pch=19,\n     ylab=\"Relative Abundance of Age-3 Fish\",\n     xlab=\"Millions of Eggs\")\npar(mar=c(0,4,0,0))\nboxplot(BloaterLH$eggs,axes=FALSE,ylim=c(0,2.4),horizontal=TRUE)\npar(mar=c(4,0,0,0))\nboxplot(BloaterLH$age3,axes=FALSE,ylim=c(0,240))\n\n\n\n\nFigure 5: Illustration of layout grid with differing heights and widths such that a scatterplot appears in the ‘middle’ with corresponding boxplots on the ‘sides.’\n\n\n\n\n \nFinally, layout() may be used to make quite complex grids, as illustrated with the code below that produced Figure 6. Note that plot.new() creates a new blank plot in which the subsequent text() commands will place text (in this case marginal labels).\n\nBTH1 <- BullTroutRML2 |> dplyr::filter(lake==\"Harrison\",era==\"1977-80\")\nBTO1 <- BullTroutRML2 |> dplyr::filter(lake==\"Osprey\",era==\"1977-80\")\nBTH2 <- BullTroutRML2 |> dplyr::filter(lake==\"Harrison\",era==\"1997-01\")\nBTO2 <- BullTroutRML2 |> dplyr::filter(lake==\"Osprey\",era==\"1997-01\")\n\n( m <- matrix(c(0,1,2,3,5,6,4,7,8),nrow=3,byrow=TRUE) )\n\n#R|       [,1] [,2] [,3]\n#R|  [1,]    0    1    2\n#R|  [2,]    3    5    6\n#R|  [3,]    4    7    8\n\nlayout(m,height=c(1,8,8),width=c(1,8,8),respect=TRUE)\n\npar(mar=c(0,0,0,0))\nplot.new(); text(0.5,0.5,\"Harrison\",cex=1.5)\nplot.new(); text(0.5,0.5,\"Osprey\",cex=1.5)\nplot.new(); text(0.5,0.5,\"Era = 1977-1980\",cex=1.5,srt=90)\nplot.new(); text(0.5,0.5,\"Era = 1997-2001\",cex=1.5,srt=90)\n\npar(mar=c(3.05,3.05,0.65,0.65),mgp=c(1.7,0.5,0))\nxlmt <- c(-0.5,14.5)\nylmt <- c(0,700)\nplot(fl~age,data=BTH1,xlab=\"\",ylab=\"Fork Length\",\n     pch=19,xlim=xlmt,ylim=ylmt)\nplot(fl~age,data=BTO1,xlab=\"\",ylab=\"\",\n     pch=19,xlim=xlmt,ylim=ylmt)\nplot(fl~age,data=BTH2,xlab=\"Age\",ylab=\"Fork Length\",\n     pch=19,xlim=xlmt,ylim=ylmt)\nplot(fl~age,data=BTO2,xlab=\"Age\",ylab=\"\",\n     pch=19,xlim=xlmt,ylim=ylmt)\n\n\n\n\nFigure 6: Illustration of layout grid with differing heights and widths such that labels can be placed on the sides.\n\n\n\n\n\n\n\n\n\nReferences\n\nOgle, D. H. 2016. Introductory Fisheries Analyses with R. CRC Press, Boca Raton, FL."
  }
]